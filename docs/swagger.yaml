basePath: /api/v1
definitions:
  dto.PaginationResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.RepositoryListResponse:
    properties:
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
      repositories:
        items:
          $ref: '#/definitions/dto.RepositoryResponse'
        type: array
    type: object
  dto.RepositoryResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      fork:
        type: boolean
      forks:
        type: integer
      full_name:
        type: string
      html_url:
        type: string
      id:
        type: string
      language:
        type: string
      name:
        type: string
      private:
        type: boolean
      stars:
        type: integer
      url:
        type: string
      watchers:
        type: integer
    type: object
  dto.RepositorySyncResponse:
    properties:
      message:
        type: string
    type: object
  dto.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      hasSyncedRepositories:
        type: boolean
      id:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
      message:
        type: string
    type: object
  handlers.HealthResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@snapdeploy.com
    name: SnapDeploy Team
  description: A modern deployment platform with DDD architecture
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: SnapDeploy Core API
  version: "1.0"
paths:
  /auth/me:
    get:
      consumes:
      - application/json
      description: Returns information about the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ClerkAuth: []
      summary: Get current user information
      tags:
      - Authentication
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Health check
      tags:
      - Health
  /users/{id}/repos:
    get:
      consumes:
      - application/json
      description: Returns the repositories for a user with pagination and optional
        search
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: Page number
        in: query
        minimum: 1
        name: page
        type: integer
      - default: 20
        description: Items per page
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Search query (searches name, full_name, description)
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RepositoryListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ClerkAuth: []
      summary: Get user repositories with search
      tags:
      - Repositories
  /users/{id}/repos/sync:
    post:
      consumes:
      - application/json
      description: Syncs the repositories for a user from GitHub
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RepositorySyncResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ClerkAuth: []
      summary: Sync user repositories from GitHub
      tags:
      - Repositories
securityDefinitions:
  ClerkAuth:
    description: Clerk JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
