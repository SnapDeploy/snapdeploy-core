// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package database

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CountRepositoriesByUserID(ctx context.Context, userID uuid.UUID) (int64, error)
	CountSearchRepositoriesByUserID(ctx context.Context, arg *CountSearchRepositoriesByUserIDParams) (int64, error)
	CountUsers(ctx context.Context) (int64, error)
	CreateUser(ctx context.Context, arg *CreateUserParams) (*User, error)
	DeleteRepository(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	GetRepositoriesByUserID(ctx context.Context, arg *GetRepositoriesByUserIDParams) ([]*Repository, error)
	GetRepositoryByURL(ctx context.Context, url string) (*Repository, error)
	GetUserByClerkID(ctx context.Context, clerkUserID string) (*User, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (*User, error)
	ListUsers(ctx context.Context, arg *ListUsersParams) ([]*User, error)
	SearchRepositoriesByUserID(ctx context.Context, arg *SearchRepositoriesByUserIDParams) ([]*Repository, error)
	UpdateUser(ctx context.Context, arg *UpdateUserParams) (*User, error)
	UpsertRepository(ctx context.Context, arg *UpsertRepositoryParams) (*Repository, error)
}

var _ Querier = (*Queries)(nil)
